name: Build Kernel with KernelSU and Google Toolchain

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout kernel source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison flex libssl-dev libelf-dev make gcc clang wget git python3 rsync ca-certificates

      - name: Download latest Google prebuilt Clang/LLVM toolchain
        run: |
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master.tar.gz -O google-clang.tar.gz
          mkdir google-clang && tar -xzf google-clang.tar.gz -C google-clang

      - name: Add KernelSU support
        run: |
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -

      - name: Configure kernel
        run: |
          export PATH="$PWD/google-clang/clang-r*/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=arm64
          make ARCH=arm64 vendor/veux-qgki_deconfig

      - name: Enable CONFIG_KSU=y in kernel config
        run: |
          ./scripts/config --file .config --enable KSU
          yes "" | make oldconfig

      - name: Build kernel
        run: |
          export PATH="$PWD/google-clang/clang-r*/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=arm64
          make -j$(nproc) ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-android- CLANG_TRIPLE=aarch64-linux-gnu-

      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build
          path: |
            arch/arm64/boot/Image
            arch/arm64/boot/dtb*
            
